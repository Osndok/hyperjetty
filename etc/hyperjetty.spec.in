
Name:           hyperjetty
Version:        @MAJOR@.@MINOR@.@PATCH@@.SNAPSHOT@
Release:        @BUILD@
Summary:        Jetty Servlet Hypervisor

Group:          Allogy/Infrastructure
Vendor:         Allogy Interactive
License:        Proprietary
URL:            http://redmine.allogy.com/projects/hyperjetty

Source:         hyperjetty-%{version}.tar.gz

Source2:        etc/hyperjetty.init

# Must use version 8.x b/c 9.x is java 1.7 & has misc. broken plugins & major package-name breakage
Source3:        devtools:/usr/src/jetty-runner-8.1.13.v20130916.jar

# TODO: split this off as another package... built from source or fetched from a trusted repo.
Source5:        devtools:/usr/src/junixsocket-1.3-bin.tar.bz2

Source10:       hyperjetty-control/target/hyperjetty-control.jar
Source11:       hyperjetty-runtime/target/hyperjetty-runtime.jar
Source12:       hyperjetty-server/target/hyperjetty-server.jar
Source13:       hyperjetty-webapp/target/hyperjetty-webapp.jar

BuildRoot:      %{_tmppath}/%{name}-%{version}-%{release}-root-%(%{__id_u} -n)

BuildRequires:  zip
Requires:       java

BuildRequires:  java-1.6.0-openjdk-devel
%define JAVA_BIN /usr/lib/jvm/java-1.6.0-openjdk/bin

Requires: libjunixsockets >= 1.5

%define __jar_repack %{nil}

%description

A very small & fault-tolerant jetty "hypervisor" that allocates,
tracks, and launches single-servlet jetty containers.

%package -n libjunixsockets

Version:   1.5
Release:   3
Group:     Allogy/Infrastructure
Summary:   JNI component that provides UNIX-domain-sockets to Java processes

%description -n libjunixsockets

JNI component that provides UNIX-domain-sockets to Java processes

%prep
%setup -q


%build
#configure

# Make sure we use the right java version
export PATH=%JAVA_BIN:$PATH

tar xjf %{SOURCE5}
mv -v junixsocket-* junixsocket


%install
rm   -rf $RPM_BUILD_ROOT
mkdir    $RPM_BUILD_ROOT

mkdir -p              $RPM_BUILD_ROOT/sock/hj

mkdir -p              $RPM_BUILD_ROOT/opt/newsclub
mv      junixsocket/lib-native $RPM_BUILD_ROOT/opt/newsclub

mkdir -p              $RPM_BUILD_ROOT/usr/lib/hyperjetty
mkdir -p              $RPM_BUILD_ROOT/usr/share/java

cp %{SOURCE3}         $RPM_BUILD_ROOT/usr/share/java/jetty-runner.jar
cp %{SOURCE10}        $RPM_BUILD_ROOT/usr/share/java/
cp %{SOURCE11}        $RPM_BUILD_ROOT/usr/share/java/
cp %{SOURCE12}        $RPM_BUILD_ROOT/usr/share/java/
cp %{SOURCE13}        $RPM_BUILD_ROOT/usr/share/java/

cp -v junixsocket/dist/junixsocket-1*.jar $RPM_BUILD_ROOT/usr/share/java/junixsocket.jar

rm -rfv junixsocket

cd       $RPM_BUILD_ROOT

mkdir -p ./var/lib/hyperjetty ./var/log/hyperjetty ./etc/init.d ./usr/bin/ ./usr/sbin

touch     ./usr/bin/hj
chmod 755 ./usr/bin/hj
cat  -  > ./usr/bin/hj <<"EOF"
#!/bin/bash
export CONTROL_PORT=5001
exec java -cp /usr/share/java/hyperjetty-control.jar com.allogy.infra.hyperjetty.control.Main "$@"
EOF

touch     ./usr/sbin/hyperjettyd
chmod 755 ./usr/sbin/hyperjettyd
cat  -  > ./usr/sbin/hyperjettyd <<"EOF"
#!/bin/bash

export CONTROL_PORT=5001
export LIB_DIRECTORY=/usr/share/java
export WEBAPP_DIRECTORY=/usr/lib/hyperjetty
export LOG_DIRECTORY=/var/log/hyperjetty
export JETTY_RUNNER_JAR=/usr/share/java/jetty-runner.jar

# Store the webapp config files alongside the war files...
export ETC_DIRECTORY=$WEBAPP_DIRECTORY

#export JETTY_JMX_XML=/usr/share/java/jetty-jmx.xml
#export JETTY_JMX_JAR=/usr/share/java/jetty-jmx.jar

unset LS_COLORS

OPTIONS="-Dvisualvm.display.name=Jetty-Hypervisor"
OPTIONS="$OPTIONS -Xmx33m"
OPTIONS="$OPTIONS -XX:MaxPermSize=15m"

exec java $OPTIONS -cp /usr/share/java/hyperjetty-server.jar com.allogy.infra.hyperjetty.server.Service "$@"
EOF

cp %{SOURCE2} ./etc/init.d/hyperjetty
chmod 755 ./etc/init.d/hyperjetty

mkdir -p ./etc/logrotate.d
cat -> ./etc/logrotate.d/hyperjetty <<"EOF"
# %{name}.spec
/var/log/hyperjetty/*.log {
	copytruncate
	size 100M
	rotate 10
	missingok
	dateext
	compress
	nosharedscripts
	prerotate
		bash -c "[[ ! $1 =~ latest ]]"
	endscript
}

EOF

%clean
rm -rf $RPM_BUILD_ROOT

%pre

#dont: getent group  hyperjetty >/dev/null || groupadd -r hyperjetty
#..or else this will fail with: "group already exists" :(
getent passwd hyperjetty >/dev/null || \
	/usr/sbin/useradd -c "Hyper Jetty" -s /sbin/nologin -r -d /var/lib/hyperjetty hyperjetty

%post
/sbin/chkconfig --add hyperjetty

%files
%defattr(-,hyperjetty,hyperjetty,-)
%doc
/usr/bin/hj
/usr/sbin/hyperjettyd
%dir /var/log/hyperjetty
%dir /sock/hj
/var/lib/hyperjetty
/usr/lib/hyperjetty
/usr/share/java/*.jar
/etc/init.d/hyperjetty
#config(noreplace) /etc/sysconfig/hyperjetty
%config /etc/logrotate.d/hyperjetty

%files -n libjunixsockets
/opt/newsclub/lib-native
